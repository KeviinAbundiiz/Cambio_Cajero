/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cambio_dinero;

import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Abund
 */
public class Cambio extends javax.swing.JFrame {

    /**
     * Creates new form Cambio
     */
    public Cambio() {
        initComponents();
        
        //Instanciamos la clase Random
        Random aleatorio = new Random(System.currentTimeMillis());

        double cero = 0;

        //Llenar cajas de texto con 0
        x.setText(String.valueOf(aleatorio.nextInt(1001)));
        y.setText(String.valueOf(aleatorio.nextInt(6)));
        z.setText(String.valueOf(aleatorio.nextInt(6)));
        a.setText(String.valueOf(aleatorio.nextInt(6)));
        b.setText(String.valueOf(aleatorio.nextInt(6)));
        c.setText(String.valueOf(aleatorio.nextInt(6)));
        d.setText(String.valueOf(aleatorio.nextInt(6)));
        e.setText(String.valueOf(aleatorio.nextInt(6)));
        f.setText(String.valueOf(aleatorio.nextInt(6)));
        p.setText(String.valueOf(cero));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        x = new javax.swing.JTextField();
        y = new javax.swing.JTextField();
        z = new javax.swing.JTextField();
        a = new javax.swing.JTextField();
        b = new javax.swing.JTextField();
        c = new javax.swing.JTextField();
        d = new javax.swing.JTextField();
        e = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        p = new javax.swing.JTextField();
        btn_calcular = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        f = new javax.swing.JTextField();
        btn_rellenar_random = new javax.swing.JButton();
        btn_rellenar_ceros = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(490, 470));
        setResizable(false);

        jLabel1.setText("Cuenta:");

        jLabel2.setText("Billetes 200:");

        jLabel3.setText("Billetes 100:");

        jLabel4.setText("Billetes 50:");

        jLabel5.setText("Monedas 10:");

        jLabel6.setText("Monedas 5:");

        jLabel7.setText("Monedas 2:");

        jLabel8.setText("Monedas 1:");

        x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xActionPerformed(evt);
            }
        });

        y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yActionPerformed(evt);
            }
        });

        b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActionPerformed(evt);
            }
        });

        e.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eActionPerformed(evt);
            }
        });

        jLabel9.setText("Total de pago:");

        p.setEditable(false);

        btn_calcular.setText("Calcular");
        btn_calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calcularActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        jLabel10.setText("Cajero");

        jLabel11.setText("Billetes 20:");

        btn_rellenar_random.setText("Rellenar campos con valores distintos");
        btn_rellenar_random.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rellenar_randomActionPerformed(evt);
            }
        });

        btn_rellenar_ceros.setText("Rellenar con ceros los campos");
        btn_rellenar_ceros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rellenar_cerosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_calcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(z))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(y))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(a))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(f)))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel8))
                                            .addGap(26, 26, 26)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(d, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                                .addComponent(e, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                                .addComponent(c, javax.swing.GroupLayout.Alignment.TRAILING)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(btn_rellenar_random, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_rellenar_ceros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btn_calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_rellenar_random, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_rellenar_ceros, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xActionPerformed

    private void yActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yActionPerformed

    private void bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bActionPerformed

    private void eActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eActionPerformed

    private void btn_calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcularActionPerformed
        /*//Instanciamos la clase Random
        Random aleatorio = new Random(System.currentTimeMillis());
        
        //Asignar cantidad de monedas y billetes de máquina
        //Producir números aleatorios entre 0 y 10
        double billetes200 = aleatorio.nextInt(11);
        double billetes100 = aleatorio.nextInt(11);
        double billetes50 = aleatorio.nextInt(11);
        double billetes20 = aleatorio.nextInt(11);
        double monedas10 = aleatorio.nextInt(11);
        double monedas5 = aleatorio.nextInt(11);
        double monedas2 = aleatorio.nextInt(11);
        double monedas1 = aleatorio.nextInt(11);*/
        
        double billetes200 = 1;
        double billetes100 = 1;
        double billetes50 = 1;
        double billetes20 = 1;
        double monedas10 = 1;
        double monedas5 = 1;
        double monedas2 = 1;
        double monedas1 = 1;
        
        System.out.println("Billetes de 200 en cajero: "+ billetes200);
        System.out.println("Billetes de 100 en cajero: "+ billetes100);
        System.out.println("Billetes de 50 en cajero: "+ billetes50);
        System.out.println("Billetes de 20 en cajero: "+ billetes20);
        System.out.println("Monedas de 10 en cajero: "+ monedas10);
        System.out.println("Monedas de 5 en cajero: "+ monedas5);
        System.out.println("Monedas de 2 en cajero: "+ monedas2);
        System.out.println("Monedas de 1 en cajero: "+ monedas1);

        //Obtener cantidad de la cuenta y dinero de pago de las cajas de texto
        double cuenta = Double.parseDouble(x.getText());
        double doscientos = Double.parseDouble(y.getText());
        double cien = Double.parseDouble(z.getText());
        double cincuenta = Double.parseDouble(a.getText());
        double veinte = Double.parseDouble(f.getText());
        double diez = Double.parseDouble(b.getText());
        double cinco = Double.parseDouble(c.getText());
        double dos = Double.parseDouble(d.getText());
        double un = Double.parseDouble(e.getText());

        //Actualizar cantidad de monedas y billetes de la máquina una vez pagado
        billetes200 = billetes200 + doscientos;
        billetes100 = billetes100 + cien;
        billetes50 = billetes50 + cincuenta;
        billetes20 = billetes20 + veinte;
        monedas10 = monedas10 + diez;
        monedas5 = monedas5 + cinco;
        monedas2 = monedas2+ dos;
        monedas1 = monedas1 + un;

        //Operación para calcular el pago realizado
        double pago = ((doscientos * 200)+(cien * 100)+(cincuenta * 50)+(veinte * 20)+(diez * 10)+(cinco * 5)+(dos * 2)+(un * 1));
        p.setText(String.valueOf(pago));
        System.out.println("Total pago: "+pago);

        //Definir los contadores de los billetes y monedas
        double contador200 = 0;
        double contador100 = 0;
        double contador50 = 0;
        double contador20 = 0;
        double contador10 = 0;
        double contador5 = 0;
        double contador2 = 0;
        double contador1 = 0;
        
        //Bandera para ver si se ejecuta el código de las condicionales para el cálculo de los billetes
        boolean bandera = false;

        //Condicionales
        if(pago<cuenta){
            JOptionPane.showMessageDialog(null, "Falta dinero por pagar.", "ERROR", JOptionPane.WARNING_MESSAGE);
        }else{
            if(pago == cuenta){
                JOptionPane.showMessageDialog(null, "Tu cambio es de $0.", "RESULTADO", JOptionPane.INFORMATION_MESSAGE);
            }else{
                double diferencia = pago - cuenta;
                System.out.println("Diferencia: "+diferencia);

                double dineroCajero = ((billetes200*200)+(billetes100*100)+(billetes50*50)+(billetes20*20)+(monedas10*10)+(monedas5*5)+(monedas2*2)+(monedas1*1));
                System.out.println("Dinero total en cajero: "+dineroCajero);

                if(diferencia > dineroCajero){
                    JOptionPane.showMessageDialog(null, "Lo siento no tengo dinero suficiente para darte cambio.", "ERROR", JOptionPane.WARNING_MESSAGE);
                }else{
                    while(diferencia != 0){
                        bandera = false;
                        //Evaluación para los billetes de 200
                        if(billetes200 != 0){
                            if(diferencia >= 200){
                                diferencia = diferencia - 200;
                                billetes200 = billetes200 - 1;
                                contador200 = contador200 + 1;
                                System.out.println("Diferencia: "+diferencia);
                                continue;
                            }
                        }

                        //Evaluación para los billetes de 100
                        if(billetes100 != 0){
                            if(diferencia >= 100){
                                diferencia = diferencia - 100;
                                billetes100 = billetes100 - 1;
                                contador100 = contador100 + 1;
                                System.out.println("Diferencia: "+diferencia);
                                continue;
                            }
                        }
                        
                        //Evaluación para los billetes de 50
                        if(billetes50 != 0){
                            if(diferencia >= 50){
                                diferencia = diferencia - 50;
                                billetes50 = billetes50 - 1;
                                contador50 = contador50 + 1;
                                System.out.println("Diferencia: "+diferencia);
                                continue;
                            }
                        }

                        //Evaluación para los billetes de 20
                        if(billetes20 != 0){
                            if(diferencia >= 20){
                                diferencia = diferencia - 20;
                                billetes20 = billetes20 - 1;
                                contador20 = contador20 + 1;
                                System.out.println("Diferencia: "+diferencia);
                                continue;
                            }
                        }


                        //Evaluación para las monedas de 10
                        if(monedas10 != 0){
                            if(diferencia >= 10){
                                diferencia = diferencia - 10;
                                monedas10 = monedas10 - 1;
                                contador10 = contador10 + 1;
                                System.out.println("Diferencia: "+diferencia);
                                continue;
                            }
                        }

                        //Evaluación para las monedas de 5
                        if(monedas5 != 0){
                            if(diferencia >= 5){
                                diferencia = diferencia - 5;
                                monedas5 = monedas5 - 1;
                                contador5 = contador5 + 1;
                                System.out.println("Diferencia: "+diferencia);
                                continue;
                            }
                        }


                        //Evaluación para las monedas de 2
                        if(monedas2 != 0){
                            if(diferencia >= 2){
                                diferencia = diferencia - 2;
                                monedas2 = monedas2 - 1;
                                contador2 = contador2 + 1;
                                System.out.println("Diferencia: "+diferencia);
                                continue;
                            }
                        }

                        //Evaluación para las monedas de 1
                        if(monedas1 != 0){
                            if(diferencia >= 1){
                                diferencia = diferencia - 1;
                                monedas1 = monedas1 - 1;
                                contador1 = contador1 + 1;
                                System.out.println("Diferencia: "+diferencia);
                                continue;
                            }
                        }
                        
                        //Evaluaciones extra
                        if(monedas1 == 0){
                            if(diferencia >= 1){
                                bandera = true;
                                JOptionPane.showMessageDialog(null, "Lo siento no tengo el dinero exacto para darte cambio.", "ERROR", JOptionPane.WARNING_MESSAGE);
                                break;
                            }
                        }
                        
                    }
                    
                    if(bandera==false){
                        //Operación para calcular el pago realizado
                        double cambio = ((contador200 * 200)+(contador100 * 100)+(contador50 * 50)+(contador20 * 20)+(contador10 * 10)+(contador5 * 5)+(contador2 * 2)+(contador1 * 1));
                        System.out.println("Total cambio: "+cambio);

                        JOptionPane.showMessageDialog(null, "Tu cambio es de: $"+ cambio + " pesos\n\n" +
                                "Desglose de cambio: \n"+
                                (int)contador200 +" billetes de $200\n" +
                                (int)contador100 +" billetes de $100\n" +
                                (int)contador50 +" billetes de $50\n" +
                                (int)contador20 +" billetes de $20\n" +
                                (int)contador10 +" monedas de $10\n" +
                                (int)contador5 +" monedas de $5\n" +
                                (int)contador2 +" monedas de $2\n" +
                                (int)contador1 +" monedas de $1\n"
                                , "RESULTADO", JOptionPane.INFORMATION_MESSAGE);
                    }
                    

                }
            }
        }
    }//GEN-LAST:event_btn_calcularActionPerformed

    private void btn_rellenar_randomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rellenar_randomActionPerformed
        //Instanciamos la clase Random
        Random aleatorio = new Random(System.currentTimeMillis());

        double cero = 0;

        //Llenar cajas de texto con 0
        x.setText(String.valueOf(aleatorio.nextInt(1001)));
        y.setText(String.valueOf(aleatorio.nextInt(6)));
        z.setText(String.valueOf(aleatorio.nextInt(6)));
        a.setText(String.valueOf(aleatorio.nextInt(6)));
        b.setText(String.valueOf(aleatorio.nextInt(6)));
        c.setText(String.valueOf(aleatorio.nextInt(6)));
        d.setText(String.valueOf(aleatorio.nextInt(6)));
        e.setText(String.valueOf(aleatorio.nextInt(6)));
        f.setText(String.valueOf(aleatorio.nextInt(6)));
        p.setText(String.valueOf(cero));
    }//GEN-LAST:event_btn_rellenar_randomActionPerformed

    private void btn_rellenar_cerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rellenar_cerosActionPerformed
        int cero = 0;

        //Llenar cajas de texto con 0
        x.setText(String.valueOf(cero));
        y.setText(String.valueOf(cero));
        z.setText(String.valueOf(cero));
        a.setText(String.valueOf(cero));
        b.setText(String.valueOf(cero));
        c.setText(String.valueOf(cero));
        d.setText(String.valueOf(cero));
        e.setText(String.valueOf(cero));
        f.setText(String.valueOf(cero));
        p.setText(String.valueOf(cero));
    }//GEN-LAST:event_btn_rellenar_cerosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cambio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cambio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cambio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cambio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cambio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a;
    private javax.swing.JTextField b;
    private javax.swing.JButton btn_calcular;
    private javax.swing.JButton btn_rellenar_ceros;
    private javax.swing.JButton btn_rellenar_random;
    private javax.swing.JTextField c;
    private javax.swing.JTextField d;
    private javax.swing.JTextField e;
    private javax.swing.JTextField f;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField p;
    private javax.swing.JTextField x;
    private javax.swing.JTextField y;
    private javax.swing.JTextField z;
    // End of variables declaration//GEN-END:variables
}
